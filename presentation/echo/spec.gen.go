// Package echo provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package echo

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/7HdpT6zQAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
